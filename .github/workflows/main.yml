#
# This is free software, license use GPLv3.
#
# Copyright (c) 2020
#

name: openwrt-dragino2

env:
  UPLOAD_RELEASE: true
  UPLOAD_FIRMWARE: false
  UPLOAD_BIN_DIR: false
  REMOVE_OLD_RELEASE: false
  REMOVE_WORKFLOW_RUNS: true
  TZ: Asia/Shanghai

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

jobs:

  build:

    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout Project
        uses: actions/checkout@v2
        with:
          ref: main

      - name: Initialize Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo du -xh --exclude=/{proc,sys,dev} / | grep -E '^[0-9.]*?[GTPEZY]'
          docker image prune -a -f
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt update
          sudo -E apt install build-essential ccache ecj fastjar file g++ gawk gettext git java-propose-classpath libelf-dev libncurses5-dev libncursesw5-dev libssl-dev python python2.7-dev python3 unzip wget python3-distutils python3-setuptools rsync subversion swig time xsltproc zlib1g-dev
          sudo -E apt autoremove --purge
          sudo -E apt clean
          sudo timedatectl set-timezone "$TZ"
          git config --global user.name "GitHub"
          git config --global user.email "noreply@github.com"
          echo "## $(date +"%Y%m%d")-dragino2" > update_log.txt
          df -h

      - name: Build OpenWrt
        run: |
          ./build.sh
          df -h
      - name: SSH connection to Actions
        uses: P3TERX/ssh2actions@v1.0.0
        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
        env:
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        
      - name: Assemble Artifact
        id: assemble_artifact
        run: |
          echo "##[set-output name=artifact_name;]OpenWrt_$(date +%Y%m%d)_Dragino2"

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
        with:
          name: ${{ steps.assemble_artifact.outputs.artifact_name }}
          path: artifact

      - name: Upload firmware to release
        uses: softprops/action-gh-release@v1
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: AutoUpdate
          body_path: update_log.txt
          files: openwrt/bin/*

      - name: Delete workflow runs
        uses: GitRML/delete-workflow-runs@main
        with:
          retain_days: 1
          keep_minimum_runs: 3

      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@v0.1.0
        with:
          keep_latest: 3
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
